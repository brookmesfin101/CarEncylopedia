@model CarEncylopedia.Main.ViewModels.CompareYearsViewModel

<div class="row">
    <div class="col-9">
        <canvas id="myChart" width="800" height="600"></canvas>
    </div>
    <div class="col-3">
        <div class="form-group row mt-3">
            @Html.LabelFor(m => m.Makes, new { @class = "col-5 col-form-label" })
            @Html.DropDownList("MakesDropDown", new SelectList(Model.Makes), new { @class = "form-control col-5 d-inline-block", id = "MakesDropDownSelect" })
        </div>
        <div class="form-group row">
            @Html.LabelFor(m => m.Models, new { @class = "col-5 col-form-label" })
            @Html.DropDownList("ModelsDropDown", new SelectList(Model.Models), new { @class = "form-control col-5 d-inline-block", id = "ModelsDropDownSelect" })
        </div>
        @*<div class="form-group row">
            @Html.LabelFor(m => m.Years, new { @class = "col-5 col-form-label" })
            @Html.DropDownList("YearsDropDown", new SelectList(Model.Years), new { @class = "form-control col-5 d-inline-block", id = "YearsDropDownSelect" })
        </div>*@
    </div>
</div>

<script type="text/javascript">
    var ctx = document.getElementById('myChart').getContext('2d');
    var cars = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Cars))
    var years = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Years))

    var removedPackages = [];
    debugger;

    var colors = [];
    var yaxisData = [];

    var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: years,
            datasets: [{
                label: label,
                data: yaxisData,
                backgroundColor: colors,
                borderColor: 'rgba(0,0,0,.25)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    },
                    scaleLabel: {
                        display: true,
                        labelString: 'Price ($)',
                        fontSize: 30,
                        fontColor: '#000000',
                        fontFamily: 'Advent Pro'
                    }
                }],
                xAxes: [{
                    scaleLabel: {
                        display: true,
                        labelString: 'Year',
                        fontSize: 30,
                        fontColor: '#000000',
                        fontFamily: 'Advent Pro'
                    }
                }]
            },
            legend: {
                labels: {
                    boxWidth: 0,
                    fontSize: 30,
                    fontColor: '#000000',
                    fontFamily: 'Advent Pro'
                }
            }
        }
    });
</script>
